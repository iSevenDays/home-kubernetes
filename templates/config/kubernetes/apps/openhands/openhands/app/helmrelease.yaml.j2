---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openhands
spec:
  interval: 15m
  timeout: 10m
  chart:
    spec:
      chart: openhands
      version: 0.1.1
      sourceRef:
        kind: HelmRepository
        name: openhands
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  releaseName: openhands
  # PostRenderer to add DinD sidecar configuration
  postRenderers:
    - kustomize:
        patches:
          # Strategic merge patch to add DinD sidecar and environment variables
          - target:
              kind: Deployment
              name: openhands
            patch: |
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: openhands
              spec:
                template:
                  spec:
                    containers:
                    # Add DinD sidecar container
                    - name: docker-daemon
                      image: docker:28-dind
                      env:
                      - name: DOCKER_TLS_CERTDIR
                        value: ""
                      - name: DOCKER_HOST
                        value: "tcp://0.0.0.0:2375"
                      securityContext:
                        privileged: true
                      ports:
                      - containerPort: 2375
                        name: docker-api
                        protocol: TCP
                      resources:
                        requests:
                          memory: "512Mi"
                          cpu: "250m"
                        limits:
                          memory: "2Gi"
                          cpu: "1000m"
                      volumeMounts:
                      - name: docker-storage
                        mountPath: /var/lib/docker
                      command:
                      - "/bin/sh"
                      - "-c"
                      - |
                        echo "Starting Docker daemon for OpenHands runtime..."
                        dockerd --host=tcp://0.0.0.0:2375 --host=unix:///var/run/docker.sock --tls=false &
                        DOCKERD_PID=$!

                        echo "Waiting for Docker daemon to start..."
                        timeout=60
                        while [ $timeout -gt 0 ]; do
                          if docker info >/dev/null 2>&1; then
                            echo "Docker daemon ready for OpenHands runtime containers"
                            break
                          fi
                          sleep 1
                          timeout=$((timeout-1))
                        done

                        if [ $timeout -eq 0 ]; then
                          echo "FAILED: Docker daemon did not start"
                          exit 1
                        fi

                        echo "DinD sidecar ready, waiting for main process..."
                        wait $DOCKERD_PID
                    # Patch main OpenHands container (assuming it's the first container)
                    - name: openhands
                      env:
                      - name: DOCKER_HOST
                        value: "tcp://127.0.0.1:2375"
                      - name: RUNTIME
                        value: "docker"
                      - name: SANDBOX_RUNTIME_BINDING_ADDRESS
                        value: "127.0.0.1"
                      - name: DOCKER_HOST_ADDR
                        value: "127.0.0.1"
                      - name: SANDBOX_LOCAL_RUNTIME_URL
                        value: "http://127.0.0.1"
                      - name: SANDBOX_REMOTE_RUNTIME_API_TIMEOUT
                        value: "180"
                    # Add volumes
                    volumes:
                    - name: docker-storage
                      emptyDir:
                        sizeLimit: "20Gi"
  values:
    # The chart provides an Ingress resource but this cluster exposes
    # services via Gateway API HTTPRoutes.  We therefore disable the
    # built-in Ingress and create a separate HTTPRoute manifest (see
    # ../gateway/route.yaml.j2) that forwards external traffic.
    ingress:
      enabled: false
      host: "${SECRET_DOMAIN}"
    env:
      DB_HOST: "openhands-postgresql"
      DB_NAME: "openhands"
      DB_USER: "postgres"
      AUTH_WEB_HOST: "auth.openhands.${SECRET_DOMAIN}"
      KEYCLOAK_SERVER_URL_EXT: "https://auth.openhands.${SECRET_DOMAIN}"
# monitor kubectl logs -n flux-system deploy/helm-controller | tail | jq for Warning: spec.template.spec.containers[0].env[48]: hides previous definition of \"DB_PASS\", which may be dropped when using apply
#      DB_PASS:
#        valueFrom:
#          secretKeyRef:
#            name: postgres-password
#            key: password
      STORAGE_CLASS: "longhorn"
      LITELLM_DEFAULT_MODEL: "litellm_proxy/prod/claude-3-7-sonnet-20250219"
      # Note: RUNTIME and networking variables are now set via postRenderer patches
    tls:
      enabled: true
    postgresql:
      enabled: false
    keycloak:
      enabled: true
      url: "http://keycloak"  # Use internal service URL for job connectivity
      externalDatabase:
        host: "openhands-postgresql"
        port: 5432
        database: "openhands"
        existingSecret: "postgres-password"
      resources:
        requests:
          cpu: "250m"
          memory: "1Gi"
        limits:
          cpu: "1500m"
          memory: "2Gi"
      ingress:
        enabled: false
        host: "auth.${SECRET_DOMAIN}"
        annotations: {}
      proxy: "edge"  # Trust X-Forwarded headers from reverse proxy
      hostname: "auth.openhands.${SECRET_DOMAIN}"
      hostnameStrict: false
      tls:
        enabled: true  # Sets KEYCLOAK_ENABLE_HTTPS: "true" to fix mixed content
        autoGenerated: true  # Let Bitnami chart generate certificates
      extraEnvVars:
        - name: KC_PROXY
          value: "edge"
        - name: KEYCLOAK_PROXY_ADDRESS_FORWARDING
          value: "true"
      Limits:
        Cpu: 1500m
        Memory: 2Gi
      Requests:
        Cpu: 250m
        Memory: 1Gi
    redis:
      enabled: true
    litellm:
      enabled: true
      url: "https://llm-proxy.${SECRET_DOMAIN}"
      # Injected from SOPS-encrypted secret rendered from templates
      teamId: "${LITELLM_TEAM_ID}"
    litellm-helm:
      fullnameOverride: "openhands-litellm"
      enabled: true
      masterkeySecretName: lite-llm-api-key
      masterkeySecretKey: lite-llm-api-key
      env:
        UI_USERNAME: "admin"
        UI_PASSWORD: "#{ openhands_global_secret }#"
      proxy_config:
        model_list:
          - model_name: "${LITELLM_MODEL}"
            litellm_params:
              model: "${LITELLM_MODEL}"
              api_base: "${LITELLM_BASE_URL}"
              api_key: "${LITELLM_API_KEY}"
              timeout: #{ litellm_timeout }#
              max_tokens: #{ litellm_max_output_tokens }#
      db:
        deployStandalone: false
        useExisting: true
        database: litellm
        endpoint: openhands-postgresql
        secret:
          name: postgres-password
      migrationJob:
        enabled: false
    podAnnotations:
      reloader.stakater.com/auto: "true"
    fullnameOverride: openhands-app
    monitoring:
      enabled: false
    appConfig:
      OPENHANDS_CONFIG_CLS: "server.config.SaaSServerConfig"
      OPENHANDS_CONVERSATION_VALIDATOR_CLS: "storage.saas_conversation_validator.SaasConversationValidator"

