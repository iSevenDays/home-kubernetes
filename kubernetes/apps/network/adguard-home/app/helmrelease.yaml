---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app adguard-home
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      adguard-home:
        replicas: 1
        strategy: Recreate
        initContainers:
          init-config:
            image:
              repository: busybox
              tag: 1.36.1
            command:
              - sh
              - -c
              - |
                # Detect host default route interface (for DHCP when using hostNetwork)
                IFACE="$(ip -4 route show default | awk '/default/ {print $5; exit}')"
                [ -z "$IFACE" ] && IFACE="eth0"
                # Backup existing config then overwrite from ConfigMap
                if [ -f /opt/adguardhome/conf/AdGuardHome.yaml ]; then
                  cp /opt/adguardhome/conf/AdGuardHome.yaml /opt/adguardhome/conf/AdGuardHome.yaml.bak || true
                fi
                cp -f /tmp/config/AdGuardHome.yaml /opt/adguardhome/conf/AdGuardHome.yaml
                # Patch the interface_name in the copied config (PVC is writable)
                sed -i "s/^\(\s*interface_name:\s*\).*/\1$IFACE/" /opt/adguardhome/conf/AdGuardHome.yaml || true
                chown 0:0 /opt/adguardhome/conf/AdGuardHome.yaml
                chmod 644 /opt/adguardhome/conf/AdGuardHome.yaml
        containers:
          app:
            image:
              repository: adguard/adguardhome
              tag: v0.107.65
            env:
              TZ: "${TIMEZONE}"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 3000
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: true
              readOnlyRootFilesystem: false
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW
                  - NET_BIND_SERVICE
                  - CHOWN
                  - DAC_OVERRIDE
                  - FOWNER
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 500m
                memory: 512Mi
    defaultPodOptions:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: adguard-home
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: "192.168.0.185"
        externalTrafficPolicy: Local
        ports:
          web:
            port: *port
          web-alt:
            port: 80
            targetPort: *port
          dns-tcp:
            port: 53
            protocol: TCP
            targetPort: 5053
          dns-udp:
            port: 53
            protocol: UDP
            targetPort: 5053
    persistence:
      config:
        existingClaim: adguard-home-config
        globalMounts:
          - path: /opt/adguardhome/conf
      data:
        existingClaim: adguard-home-data
        globalMounts:
          - path: /opt/adguardhome/work
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      config-template:
        type: configMap
        name: adguard-home-config
        advancedMounts:
          adguard-home:
            init-config:
              - path: /tmp/config
    route:
      app:
        hostnames: ["adguard.sevendays.cloud"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
