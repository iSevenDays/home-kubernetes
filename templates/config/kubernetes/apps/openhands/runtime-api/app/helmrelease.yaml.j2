---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openhands-runtime-api
spec:
  interval: 15m
  timeout: 10m
  chart:
    spec:
      chart: runtime-api
      version: "0.1.5" #crane ls ghcr.io/all-hands-ai/helm-charts/runtime-api
      sourceRef:
        kind: HelmRepository
        name: openhands
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  releaseName: openhands-runtime-api
  dependsOn:
    - name: openhands-postgresql
  values:
    # Enable in-cluster Kubernetes authentication (perfect for Talos)
    runtimeInSameCluster: true

    # Reduce replicas for resource-constrained cluster
    replicaCount: 1

    # Disable autoscaling to prevent resource issues
    autoscaling:
      enabled: false

    env:
      # Kubernetes runtime configuration for Talos
      RUNTIME_IN_SAME_CLUSTER: "true"
      K8S_NAMESPACE: "openhands"

      # Infrastructure configuration for Talos
      INGRESS_CLASS: "cilium"
      STORAGE_CLASS: "longhorn"
      RUNTIME_BASE_URL: "#{ runtime_api_domain }#"
      RUNTIME_DOMAIN: "#{ cloudflare_domain }#"

      # Resource configuration
      MEMORY_REQUEST: "2048Mi"
      CPU_REQUEST: "1000m"
      PERSISTENT_STORAGE_SIZE: "10Gi"
      RUNTIME_CLASS: "gvisor"  # Use gVisor runtime class for enhanced security

      # Database credentials are now provided exclusively via
      # `.values.database.secretName` (runtime-api-db-credentials),
      # which the chart maps to the appropriate DB_* and DATABASE_*
      # environment variables for all workloads.  Explicit overrides
      # here were causing malformed env vars and have been removed.

      # CRITICAL FIX: Chart does NOT automatically inject DB_* variables
      # from database.secretName. Must add manually for all workloads.
      DB_HOST: "openhands-postgresql"
      DB_NAME: "runtime_api_db"
      DB_USER: "postgres"
      # DB_PASS automatically provided by chart from postgres-password secret

      # Security and performance
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONUNBUFFERED: "1"
      DEV_MODE: "false"

      # Do NOT set cloud provider variables for Talos
      # GCP_PROJECT: ""    # Leave unset for non-GKE clusters
      # AWS_REGION: ""     # Leave unset for non-EKS clusters

    # Database configuration (using shared PostgreSQL instance)
    postgresql:
      enabled: false  # Use shared PostgreSQL
      auth:
        existingSecret: "postgres-password"
        passwordKey: "password"

    # External database configuration
    database:
      secretName: "runtime-api-db-credentials"

    # Image configuration
    image:
      tag: "sha-77dd418"
      pullPolicy: Always

    imagePullSecrets:
      - name: ghcr-login-secret

    # Ingress configuration for runtime-api
    ingress:
      enabled: true
      host: "#{ runtime_api_domain }#"
      className: "cilium"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod

    # Migration job configuration
    migrationJob:
      enabled: true

    # Warm runtimes configuration with VS Code support
    warmRuntimes:
      enabled: true
      count: 1
      configs:
        - name: default
          image: "ghcr.io/all-hands-ai/runtime:3ffe23571ffb85ac744c9a855331e82dda6f6fa3-nikolaik"
          working_dir: "/openhands/code/"
          command:
            - /openhands/micromamba/bin/micromamba
            - run
            - -n
            - openhands
            - poetry
            - run
            - python
            - -u
            - -m
            - openhands.runtime.action_execution_server
            - "60000"
            - --working-dir
            - /workspace
            - --plugins
            - agent_skills
            - jupyter
            - vscode  # VS Code support built-in!
            - --username
            - root
            - --user-id
            - "0"
          environment:
            LITELLM_BASE_URL: "http://openhands-litellm.openhands.svc.cluster.local:4000"
            LLM_BASE_URL: "http://openhands-litellm.openhands.svc.cluster.local:4000"
            # Database environment variables are automatically
            # injected from the `runtime-api-db-credentials` secret.
          extraEnv:
            # No manual DB_* overrides are required; remove duplicates

    # Health checks
    startupProbe:
      enabled: true
      initialDelaySeconds: 60
      periodSeconds: 15
      failureThreshold: 20

    # Resource configuration - reduced for resource-constrained cluster
    resources:
      requests:
        cpu: "250m"       # Reduced from 1000m
        memory: "1Gi"     # Reduced from 4Gi
      limits:
        cpu: "500m"       # Reduced from 1000m
        memory: "2Gi"     # Reduced from 4Gi

    # Monitoring
    monitoring:
      enabled: false

    # Cleanup configuration
    cleanup:
      enabled: true
      schedule: "*/5 * * * *"
      idle_seconds: 1800  # 30 minutes
      dead_seconds: 86400  # 1 day
