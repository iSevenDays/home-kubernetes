---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openhands
spec:
  interval: 15m
  timeout: 10m
  chart:
    spec:
      chart: openhands
      version: 0.1.1
      sourceRef:
        kind: HelmRepository
        name: openhands
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  releaseName: openhands
  values:
    # The chart provides an Ingress resource but this cluster exposes
    # services via Gateway API HTTPRoutes.  We therefore disable the
    # built-in Ingress and create a separate HTTPRoute manifest (see
    # ../gateway/route.yaml.j2) that forwards external traffic.
    ingress:
      enabled: false
      host: "openhands.${SECRET_DOMAIN}"
    env:
      DB_HOST: "openhands-postgresql"
      DB_NAME: "openhands"
      DB_USER: "postgres"
      DB_PASS:
        valueFrom:
          secretKeyRef:
            name: postgres-password
            key: password
      STORAGE_CLASS: "longhorn"
      SANDBOX_REMOTE_RUNTIME_API_TIMEOUT: "60"
      LITELLM_DEFAULT_MODEL: "litellm_proxy/prod/claude-3-7-sonnet-20250219"
    tls:
      enabled: true
    postgresql:
      enabled: false
    keycloak:
      enabled: true
      url: "http://keycloak:80"
      externalDatabase:
        host: "openhands-postgresql"
        port: 5432
        database: "openhands"
        existingSecret: "postgres-password"
      resources:
        requests:
          cpu: "250m"
          memory: "1Gi"
        limits:
          cpu: "1500m"
          memory: "2Gi"
      ingress:
        enabled: false
        host: "auth.openhands.${SECRET_DOMAIN}"
    redis:
      enabled: true
    litellm:
      enabled: true
      url: "https://llm-proxy.${SECRET_DOMAIN}"
      # Injected from SOPS-encrypted secret rendered from templates
      teamId: "${LITELLM_TEAM_ID}"
    litellm-helm:
      fullnameOverride: "openhands-litellm"
      enabled: true
      masterkeySecretName: lite-llm-api-key
      masterkeySecretKey: lite-llm-api-key
      proxy_config:
        model_list:
          - model_name: "openai/ubergarm/DeepSeek-R1-0528-IQ3_K_R4"
            litellm_params:
              model: "openai/ubergarm/DeepSeek-R1-0528-IQ3_K_R4"
              api_base: "api-base-redacted"
              api_key: "empty"
              timeout: 3600
              max_tokens: 20000
      db:
        deployStandalone: false
        useExisting: true
        database: litellm
        endpoint: openhands-postgresql
        secret:
          name: postgres-password
      # This will reclassify the job as a pre-install/pre-upgrade hook and ensure it's deleted upon successful completion, resolving the deployment failure.
      migrationJob:
        annotations:
          "helm.sh/hook": "pre-install,pre-upgrade"
          "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    podAnnotations:
      reloader.stakater.com/auto: "true"
    fullnameOverride: openhands-app
    monitoring:
      enabled: false
    appConfig:
      OPENHANDS_CONFIG_CLS: "server.config.SaaSServerConfig"
      OPENHANDS_CONVERSATION_VALIDATOR_CLS: "storage.saas_conversation_validator.SaasConversationValidator"

