---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openhands-pvc-monitor-script
data:
  check-pvc.sh: |
    #!/bin/sh
    set -eu

    NAMESPACE="openhands"
    echo "Checking for pending pods in namespace: $NAMESPACE"

    # Get all pending pods and their names
    PENDING_PODS=$(kubectl get pods -n "$NAMESPACE" --field-selector=status.phase=Pending -o json)

    if [ -z "$(echo "$PENDING_PODS" | jq '.items[]')" ]; then
        echo "No pending pods found. Exiting."
        exit 0
    fi

    echo "$PENDING_PODS" | jq -c '.items[]' | while read -r pod; do
        POD_NAME=$(echo "$pod" | jq -r '.metadata.name')

        # Check for the specific scheduling failure event
        MISSING_PVC_EVENT=$(kubectl get events -n "$NAMESPACE" --field-selector "involvedObject.name=$POD_NAME,reason=FailedScheduling" -o json | jq -r '.items[] | select(.message | contains("persistentvolumeclaim") and contains("not found"))' | jq -s '.[0]')

        if [ "$MISSING_PVC_EVENT" = "null" ]; then
            echo "Pod '$POD_NAME' is pending for a different reason or event not found. Skipping."
            continue
        fi

        # Extract the PVC name from the event message
        PVC_NAME=$(echo "$MISSING_PVC_EVENT" | jq -r '.message' | sed -n 's/.*persistentvolumeclaim "\([^"]*\)".*/\1/p')

        if [ -z "$PVC_NAME" ]; then
            echo "Could not extract PVC name for pod '$POD_NAME' from event message. Skipping."
            continue
        fi

        echo "Pod '$POD_NAME' is pending due to missing PVC: '$PVC_NAME'"

        # Check if the PVC already exists now (to avoid race conditions)
        if kubectl get pvc -n "$NAMESPACE" "$PVC_NAME" >/dev/null 2>&1; then
            echo "PVC '$PVC_NAME' already exists. Skipping creation."
            continue
        fi

        # Create the missing PVC
        echo "Creating missing PVC '$PVC_NAME'..."
        cat <<EOF | kubectl apply -n "$NAMESPACE" -f -
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${PVC_NAME}
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: longhorn
      resources:
        requests:
          storage: 10Gi
    EOF
        echo "PVC '$PVC_NAME' created."
    done

    echo "PVC check complete."
