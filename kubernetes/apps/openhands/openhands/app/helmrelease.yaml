---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openhands
spec:
  interval: 1h
  timeout: 10m
  chartRef:
    kind: OCIRepository
    name: openhands
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  releaseName: openhands
  dependsOn:
    - name: cloudflare-tunnel
      namespace: network
  values:
    # The chart provides an Ingress resource but this cluster exposes
    # services via Gateway API HTTPRoutes.  We therefore disable the
    # built-in Ingress and create a separate HTTPRoute manifest (see
    # ../gateway/route.yaml.j2) that forwards external traffic.
    ingress:
      enabled: false
    tls:
      enabled: true
    postgresql:
      enabled: false

    externalDatabase:
      host: "openhands-postgresql"
      port: 5432
      user: "postgres"
      database: "openhands"
      existingSecret: postgres-password
    redis:
      enabled: true
    sandbox:
      apiHostname: "https://runtime-api.${SECRET_DOMAIN}"
    litellm:
      url: "https://llm-proxy.${SECRET_DOMAIN}"
      # Injected from SOPS-encrypted secret rendered from templates
      teamId: "${LITELLM_TEAM_ID}"
    litellm-helm:
      enabled: true
      db:
        endpoint: "openhands-postgresql"
        deployStandalone: false
        useExisting: true
      environmentSecrets:
        - litellm-env-secrets
      ingress:
        enabled: false  # port-forward initially
      masterkeySecretName: lite-llm-api-key
      masterkeySecretKey: lite-llm-api-key
      proxy_config:
        model_list:
          - model_name: "prod/default"
            litellm_params:
              model: "os.environ/LLM_MODEL"
              api_base: "os.environ/LLM_BASE_URL"
              api_key: "os.environ/LLM_API_KEY"
              timeout: 3600
              max_tokens: 20000

    runtime-api:
      enabled: true
      startupProbe:
        enabled: true
        initialDelaySeconds: 60
        periodSeconds: 10
        failureThreshold: 12
      env:
        DB_HOST: "openhands-postgresql"
        DB_NAME: "openhands"

    podAnnotations:
      secret.reloader.stakater.com/reload: |
        sandbox-api-key,postgres-password,redis,jwt-secret,
        lite-llm-api-key,keycloak-realm,keycloak-admin,litellm-env-secrets
    controller:
      main:
        containers:
          main:
            startupProbe:
              httpGet:
                path: /health
                port: 5000
              initialDelaySeconds: 30
              periodSeconds: 10
              failureThreshold: 15

  postRenderers:
    - kustomize:
        patches:
          - target:
              group: batch
              version: v1
              kind: Job
              name: openhands-runtime-api-migrate-db
            patch: |-
              apiVersion: batch/v1
              kind: Job
              metadata:
                name: openhands-runtime-api-migrate-db
              spec:
                template:
                  spec:
                    initContainers:
                      - name: wait-for-postgres
                        image: postgres:15
                        command:
                          - sh
                          - -c
                          - "until pg_isready -h openhands-postgresql -p 5432; do echo waiting for db; sleep 2; done"
